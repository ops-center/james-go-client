/*
Apache JAMES Web Admin API

Testing DomainQuotaAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	openapiclient "go.opscenter.dev/james-go-client"
)

func Test_openapi_DomainQuotaAPIService(t *testing.T) {
	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DomainQuotaAPIService DeleteDomainQuotaCount", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var domainToBeUsed string

		httpRes, err := apiClient.DomainQuotaAPI.DeleteDomainQuotaCount(context.Background(), domainToBeUsed).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test DomainQuotaAPIService DeleteDomainQuotaSize", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var domainToBeUsed string

		httpRes, err := apiClient.DomainQuotaAPI.DeleteDomainQuotaSize(context.Background(), domainToBeUsed).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test DomainQuotaAPIService GetDomainQuota", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var domainToBeUsed string

		httpRes, err := apiClient.DomainQuotaAPI.GetDomainQuota(context.Background(), domainToBeUsed).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test DomainQuotaAPIService GetDomainQuotaCount", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var domainToBeUsed string

		httpRes, err := apiClient.DomainQuotaAPI.GetDomainQuotaCount(context.Background(), domainToBeUsed).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test DomainQuotaAPIService GetDomainQuotaSize", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var domainToBeUsed string

		httpRes, err := apiClient.DomainQuotaAPI.GetDomainQuotaSize(context.Background(), domainToBeUsed).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test DomainQuotaAPIService UpdateDomainQuota", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var domainToBeUsed string

		httpRes, err := apiClient.DomainQuotaAPI.UpdateDomainQuota(context.Background(), domainToBeUsed).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test DomainQuotaAPIService UpdateDomainQuotaCount", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var domainToBeUsed string

		httpRes, err := apiClient.DomainQuotaAPI.UpdateDomainQuotaCount(context.Background(), domainToBeUsed).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test DomainQuotaAPIService UpdateDomainQuotaSize", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var domainToBeUsed string

		httpRes, err := apiClient.DomainQuotaAPI.UpdateDomainQuotaSize(context.Background(), domainToBeUsed).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})
}
