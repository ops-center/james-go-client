/*
Apache JAMES Web Admin API

Testing MailQueueAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/searchlight/james-go-client"
)

func Test_openapi_MailQueueAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test MailQueueAPIService DeleteMailsOfMailQueue", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var mailQueueName string

		httpRes, err := apiClient.MailQueueAPI.DeleteMailsOfMailQueue(context.Background(), mailQueueName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MailQueueAPIService FlushMailsOfMailQueue", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var mailQueueName string

		httpRes, err := apiClient.MailQueueAPI.FlushMailsOfMailQueue(context.Background(), mailQueueName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MailQueueAPIService ListMailQueues", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.MailQueueAPI.ListMailQueues(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MailQueueAPIService ListMailsOfMailQueue", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var mailQueueName string

		resp, httpRes, err := apiClient.MailQueueAPI.ListMailsOfMailQueue(context.Background(), mailQueueName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MailQueueAPIService RepublishMailQueue", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.MailQueueAPI.RepublishMailQueue(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
