/*
Apache JAMES Web Admin API

Testing DlpAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	openapiclient "go.opscenter.dev/james-go-client"
)

func Test_openapi_DlpAPIService(t *testing.T) {
	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DlpAPIService FetchDLPConfiguration", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var senderDomain string
		var ruleId string

		httpRes, err := apiClient.DlpAPI.FetchDLPConfiguration(context.Background(), senderDomain, ruleId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test DlpAPIService ListDLPConfiguration", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var senderDomain string

		httpRes, err := apiClient.DlpAPI.ListDLPConfiguration(context.Background(), senderDomain).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test DlpAPIService RemoveDLPConfiguration", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var senderDomain string

		httpRes, err := apiClient.DlpAPI.RemoveDLPConfiguration(context.Background(), senderDomain).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test DlpAPIService StoreDLPConfiguration", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		var senderDomain string

		httpRes, err := apiClient.DlpAPI.StoreDLPConfiguration(context.Background(), senderDomain).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})
}
