/*
Apache JAMES Web Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TaskErrorsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskErrorsInner{}

// TaskErrorsInner struct for TaskErrorsInner
type TaskErrorsInner struct {
	MailboxId *string `json:"mailboxId,omitempty"`
	MessageId *string `json:"messageId,omitempty"`
	Uid *int32 `json:"uid,omitempty"`
}

// NewTaskErrorsInner instantiates a new TaskErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskErrorsInner() *TaskErrorsInner {
	this := TaskErrorsInner{}
	return &this
}

// NewTaskErrorsInnerWithDefaults instantiates a new TaskErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskErrorsInnerWithDefaults() *TaskErrorsInner {
	this := TaskErrorsInner{}
	return &this
}

// GetMailboxId returns the MailboxId field value if set, zero value otherwise.
func (o *TaskErrorsInner) GetMailboxId() string {
	if o == nil || IsNil(o.MailboxId) {
		var ret string
		return ret
	}
	return *o.MailboxId
}

// GetMailboxIdOk returns a tuple with the MailboxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskErrorsInner) GetMailboxIdOk() (*string, bool) {
	if o == nil || IsNil(o.MailboxId) {
		return nil, false
	}
	return o.MailboxId, true
}

// HasMailboxId returns a boolean if a field has been set.
func (o *TaskErrorsInner) HasMailboxId() bool {
	if o != nil && !IsNil(o.MailboxId) {
		return true
	}

	return false
}

// SetMailboxId gets a reference to the given string and assigns it to the MailboxId field.
func (o *TaskErrorsInner) SetMailboxId(v string) {
	o.MailboxId = &v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *TaskErrorsInner) GetMessageId() string {
	if o == nil || IsNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskErrorsInner) GetMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *TaskErrorsInner) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *TaskErrorsInner) SetMessageId(v string) {
	o.MessageId = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *TaskErrorsInner) GetUid() int32 {
	if o == nil || IsNil(o.Uid) {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskErrorsInner) GetUidOk() (*int32, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *TaskErrorsInner) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
func (o *TaskErrorsInner) SetUid(v int32) {
	o.Uid = &v
}

func (o TaskErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskErrorsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MailboxId) {
		toSerialize["mailboxId"] = o.MailboxId
	}
	if !IsNil(o.MessageId) {
		toSerialize["messageId"] = o.MessageId
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	return toSerialize, nil
}

type NullableTaskErrorsInner struct {
	value *TaskErrorsInner
	isSet bool
}

func (v NullableTaskErrorsInner) Get() *TaskErrorsInner {
	return v.value
}

func (v *NullableTaskErrorsInner) Set(val *TaskErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskErrorsInner(val *TaskErrorsInner) *NullableTaskErrorsInner {
	return &NullableTaskErrorsInner{value: val, isSet: true}
}

func (v NullableTaskErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


