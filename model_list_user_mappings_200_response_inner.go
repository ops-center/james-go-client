/*
Apache JAMES Web Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListUserMappings200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListUserMappings200ResponseInner{}

// ListUserMappings200ResponseInner struct for ListUserMappings200ResponseInner
type ListUserMappings200ResponseInner struct {
	Mapping *string `json:"mapping,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewListUserMappings200ResponseInner instantiates a new ListUserMappings200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUserMappings200ResponseInner() *ListUserMappings200ResponseInner {
	this := ListUserMappings200ResponseInner{}
	return &this
}

// NewListUserMappings200ResponseInnerWithDefaults instantiates a new ListUserMappings200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUserMappings200ResponseInnerWithDefaults() *ListUserMappings200ResponseInner {
	this := ListUserMappings200ResponseInner{}
	return &this
}

// GetMapping returns the Mapping field value if set, zero value otherwise.
func (o *ListUserMappings200ResponseInner) GetMapping() string {
	if o == nil || IsNil(o.Mapping) {
		var ret string
		return ret
	}
	return *o.Mapping
}

// GetMappingOk returns a tuple with the Mapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserMappings200ResponseInner) GetMappingOk() (*string, bool) {
	if o == nil || IsNil(o.Mapping) {
		return nil, false
	}
	return o.Mapping, true
}

// HasMapping returns a boolean if a field has been set.
func (o *ListUserMappings200ResponseInner) HasMapping() bool {
	if o != nil && !IsNil(o.Mapping) {
		return true
	}

	return false
}

// SetMapping gets a reference to the given string and assigns it to the Mapping field.
func (o *ListUserMappings200ResponseInner) SetMapping(v string) {
	o.Mapping = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ListUserMappings200ResponseInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserMappings200ResponseInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ListUserMappings200ResponseInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ListUserMappings200ResponseInner) SetType(v string) {
	o.Type = &v
}

func (o ListUserMappings200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListUserMappings200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mapping) {
		toSerialize["mapping"] = o.Mapping
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableListUserMappings200ResponseInner struct {
	value *ListUserMappings200ResponseInner
	isSet bool
}

func (v NullableListUserMappings200ResponseInner) Get() *ListUserMappings200ResponseInner {
	return v.value
}

func (v *NullableListUserMappings200ResponseInner) Set(val *ListUserMappings200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListUserMappings200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListUserMappings200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUserMappings200ResponseInner(val *ListUserMappings200ResponseInner) *NullableListUserMappings200ResponseInner {
	return &NullableListUserMappings200ResponseInner{value: val, isSet: true}
}

func (v NullableListUserMappings200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUserMappings200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


