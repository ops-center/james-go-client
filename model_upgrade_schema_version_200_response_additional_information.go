/*
Apache JAMES Web Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpgradeSchemaVersion200ResponseAdditionalInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpgradeSchemaVersion200ResponseAdditionalInformation{}

// UpgradeSchemaVersion200ResponseAdditionalInformation struct for UpgradeSchemaVersion200ResponseAdditionalInformation
type UpgradeSchemaVersion200ResponseAdditionalInformation struct {
	TargetVersion *int32 `json:"targetVersion,omitempty"`
}

// NewUpgradeSchemaVersion200ResponseAdditionalInformation instantiates a new UpgradeSchemaVersion200ResponseAdditionalInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpgradeSchemaVersion200ResponseAdditionalInformation() *UpgradeSchemaVersion200ResponseAdditionalInformation {
	this := UpgradeSchemaVersion200ResponseAdditionalInformation{}
	return &this
}

// NewUpgradeSchemaVersion200ResponseAdditionalInformationWithDefaults instantiates a new UpgradeSchemaVersion200ResponseAdditionalInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpgradeSchemaVersion200ResponseAdditionalInformationWithDefaults() *UpgradeSchemaVersion200ResponseAdditionalInformation {
	this := UpgradeSchemaVersion200ResponseAdditionalInformation{}
	return &this
}

// GetTargetVersion returns the TargetVersion field value if set, zero value otherwise.
func (o *UpgradeSchemaVersion200ResponseAdditionalInformation) GetTargetVersion() int32 {
	if o == nil || IsNil(o.TargetVersion) {
		var ret int32
		return ret
	}
	return *o.TargetVersion
}

// GetTargetVersionOk returns a tuple with the TargetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradeSchemaVersion200ResponseAdditionalInformation) GetTargetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.TargetVersion) {
		return nil, false
	}
	return o.TargetVersion, true
}

// HasTargetVersion returns a boolean if a field has been set.
func (o *UpgradeSchemaVersion200ResponseAdditionalInformation) HasTargetVersion() bool {
	if o != nil && !IsNil(o.TargetVersion) {
		return true
	}

	return false
}

// SetTargetVersion gets a reference to the given int32 and assigns it to the TargetVersion field.
func (o *UpgradeSchemaVersion200ResponseAdditionalInformation) SetTargetVersion(v int32) {
	o.TargetVersion = &v
}

func (o UpgradeSchemaVersion200ResponseAdditionalInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpgradeSchemaVersion200ResponseAdditionalInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TargetVersion) {
		toSerialize["targetVersion"] = o.TargetVersion
	}
	return toSerialize, nil
}

type NullableUpgradeSchemaVersion200ResponseAdditionalInformation struct {
	value *UpgradeSchemaVersion200ResponseAdditionalInformation
	isSet bool
}

func (v NullableUpgradeSchemaVersion200ResponseAdditionalInformation) Get() *UpgradeSchemaVersion200ResponseAdditionalInformation {
	return v.value
}

func (v *NullableUpgradeSchemaVersion200ResponseAdditionalInformation) Set(val *UpgradeSchemaVersion200ResponseAdditionalInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableUpgradeSchemaVersion200ResponseAdditionalInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableUpgradeSchemaVersion200ResponseAdditionalInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpgradeSchemaVersion200ResponseAdditionalInformation(val *UpgradeSchemaVersion200ResponseAdditionalInformation) *NullableUpgradeSchemaVersion200ResponseAdditionalInformation {
	return &NullableUpgradeSchemaVersion200ResponseAdditionalInformation{value: val, isSet: true}
}

func (v NullableUpgradeSchemaVersion200ResponseAdditionalInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpgradeSchemaVersion200ResponseAdditionalInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


