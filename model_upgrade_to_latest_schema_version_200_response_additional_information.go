/*
Apache JAMES Web Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpgradeToLatestSchemaVersion200ResponseAdditionalInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpgradeToLatestSchemaVersion200ResponseAdditionalInformation{}

// UpgradeToLatestSchemaVersion200ResponseAdditionalInformation struct for UpgradeToLatestSchemaVersion200ResponseAdditionalInformation
type UpgradeToLatestSchemaVersion200ResponseAdditionalInformation struct {
	ToVersion *int32 `json:"toVersion,omitempty"`
}

// NewUpgradeToLatestSchemaVersion200ResponseAdditionalInformation instantiates a new UpgradeToLatestSchemaVersion200ResponseAdditionalInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpgradeToLatestSchemaVersion200ResponseAdditionalInformation() *UpgradeToLatestSchemaVersion200ResponseAdditionalInformation {
	this := UpgradeToLatestSchemaVersion200ResponseAdditionalInformation{}
	return &this
}

// NewUpgradeToLatestSchemaVersion200ResponseAdditionalInformationWithDefaults instantiates a new UpgradeToLatestSchemaVersion200ResponseAdditionalInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpgradeToLatestSchemaVersion200ResponseAdditionalInformationWithDefaults() *UpgradeToLatestSchemaVersion200ResponseAdditionalInformation {
	this := UpgradeToLatestSchemaVersion200ResponseAdditionalInformation{}
	return &this
}

// GetToVersion returns the ToVersion field value if set, zero value otherwise.
func (o *UpgradeToLatestSchemaVersion200ResponseAdditionalInformation) GetToVersion() int32 {
	if o == nil || IsNil(o.ToVersion) {
		var ret int32
		return ret
	}
	return *o.ToVersion
}

// GetToVersionOk returns a tuple with the ToVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpgradeToLatestSchemaVersion200ResponseAdditionalInformation) GetToVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.ToVersion) {
		return nil, false
	}
	return o.ToVersion, true
}

// HasToVersion returns a boolean if a field has been set.
func (o *UpgradeToLatestSchemaVersion200ResponseAdditionalInformation) HasToVersion() bool {
	if o != nil && !IsNil(o.ToVersion) {
		return true
	}

	return false
}

// SetToVersion gets a reference to the given int32 and assigns it to the ToVersion field.
func (o *UpgradeToLatestSchemaVersion200ResponseAdditionalInformation) SetToVersion(v int32) {
	o.ToVersion = &v
}

func (o UpgradeToLatestSchemaVersion200ResponseAdditionalInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpgradeToLatestSchemaVersion200ResponseAdditionalInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ToVersion) {
		toSerialize["toVersion"] = o.ToVersion
	}
	return toSerialize, nil
}

type NullableUpgradeToLatestSchemaVersion200ResponseAdditionalInformation struct {
	value *UpgradeToLatestSchemaVersion200ResponseAdditionalInformation
	isSet bool
}

func (v NullableUpgradeToLatestSchemaVersion200ResponseAdditionalInformation) Get() *UpgradeToLatestSchemaVersion200ResponseAdditionalInformation {
	return v.value
}

func (v *NullableUpgradeToLatestSchemaVersion200ResponseAdditionalInformation) Set(val *UpgradeToLatestSchemaVersion200ResponseAdditionalInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableUpgradeToLatestSchemaVersion200ResponseAdditionalInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableUpgradeToLatestSchemaVersion200ResponseAdditionalInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpgradeToLatestSchemaVersion200ResponseAdditionalInformation(val *UpgradeToLatestSchemaVersion200ResponseAdditionalInformation) *NullableUpgradeToLatestSchemaVersion200ResponseAdditionalInformation {
	return &NullableUpgradeToLatestSchemaVersion200ResponseAdditionalInformation{value: val, isSet: true}
}

func (v NullableUpgradeToLatestSchemaVersion200ResponseAdditionalInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpgradeToLatestSchemaVersion200ResponseAdditionalInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


