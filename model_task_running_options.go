/*
Apache JAMES Web Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TaskRunningOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskRunningOptions{}

// TaskRunningOptions struct for TaskRunningOptions
type TaskRunningOptions struct {
	MessagesPerSecond *int32 `json:"messagesPerSecond,omitempty"`
	Mode *string `json:"mode,omitempty"`
}

// NewTaskRunningOptions instantiates a new TaskRunningOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskRunningOptions() *TaskRunningOptions {
	this := TaskRunningOptions{}
	return &this
}

// NewTaskRunningOptionsWithDefaults instantiates a new TaskRunningOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskRunningOptionsWithDefaults() *TaskRunningOptions {
	this := TaskRunningOptions{}
	return &this
}

// GetMessagesPerSecond returns the MessagesPerSecond field value if set, zero value otherwise.
func (o *TaskRunningOptions) GetMessagesPerSecond() int32 {
	if o == nil || IsNil(o.MessagesPerSecond) {
		var ret int32
		return ret
	}
	return *o.MessagesPerSecond
}

// GetMessagesPerSecondOk returns a tuple with the MessagesPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRunningOptions) GetMessagesPerSecondOk() (*int32, bool) {
	if o == nil || IsNil(o.MessagesPerSecond) {
		return nil, false
	}
	return o.MessagesPerSecond, true
}

// HasMessagesPerSecond returns a boolean if a field has been set.
func (o *TaskRunningOptions) HasMessagesPerSecond() bool {
	if o != nil && !IsNil(o.MessagesPerSecond) {
		return true
	}

	return false
}

// SetMessagesPerSecond gets a reference to the given int32 and assigns it to the MessagesPerSecond field.
func (o *TaskRunningOptions) SetMessagesPerSecond(v int32) {
	o.MessagesPerSecond = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *TaskRunningOptions) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskRunningOptions) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *TaskRunningOptions) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *TaskRunningOptions) SetMode(v string) {
	o.Mode = &v
}

func (o TaskRunningOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskRunningOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessagesPerSecond) {
		toSerialize["messagesPerSecond"] = o.MessagesPerSecond
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	return toSerialize, nil
}

type NullableTaskRunningOptions struct {
	value *TaskRunningOptions
	isSet bool
}

func (v NullableTaskRunningOptions) Get() *TaskRunningOptions {
	return v.value
}

func (v *NullableTaskRunningOptions) Set(val *TaskRunningOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskRunningOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskRunningOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskRunningOptions(val *TaskRunningOptions) *NullableTaskRunningOptions {
	return &NullableTaskRunningOptions{value: val, isSet: true}
}

func (v NullableTaskRunningOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskRunningOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


