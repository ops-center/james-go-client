/*
Apache JAMES Web Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CorrectGhostMailboxRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorrectGhostMailboxRequest{}

// CorrectGhostMailboxRequest struct for CorrectGhostMailboxRequest
type CorrectGhostMailboxRequest struct {
	// The ID of the destination mailbox (new mailbox)
	MergeDestination *string `json:"mergeDestination,omitempty"`
	// The ID of the mailbox to be merged (ghosted mailbox)
	MergeOrigin *string `json:"mergeOrigin,omitempty"`
}

// NewCorrectGhostMailboxRequest instantiates a new CorrectGhostMailboxRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorrectGhostMailboxRequest() *CorrectGhostMailboxRequest {
	this := CorrectGhostMailboxRequest{}
	return &this
}

// NewCorrectGhostMailboxRequestWithDefaults instantiates a new CorrectGhostMailboxRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorrectGhostMailboxRequestWithDefaults() *CorrectGhostMailboxRequest {
	this := CorrectGhostMailboxRequest{}
	return &this
}

// GetMergeDestination returns the MergeDestination field value if set, zero value otherwise.
func (o *CorrectGhostMailboxRequest) GetMergeDestination() string {
	if o == nil || IsNil(o.MergeDestination) {
		var ret string
		return ret
	}
	return *o.MergeDestination
}

// GetMergeDestinationOk returns a tuple with the MergeDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrectGhostMailboxRequest) GetMergeDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.MergeDestination) {
		return nil, false
	}
	return o.MergeDestination, true
}

// HasMergeDestination returns a boolean if a field has been set.
func (o *CorrectGhostMailboxRequest) HasMergeDestination() bool {
	if o != nil && !IsNil(o.MergeDestination) {
		return true
	}

	return false
}

// SetMergeDestination gets a reference to the given string and assigns it to the MergeDestination field.
func (o *CorrectGhostMailboxRequest) SetMergeDestination(v string) {
	o.MergeDestination = &v
}

// GetMergeOrigin returns the MergeOrigin field value if set, zero value otherwise.
func (o *CorrectGhostMailboxRequest) GetMergeOrigin() string {
	if o == nil || IsNil(o.MergeOrigin) {
		var ret string
		return ret
	}
	return *o.MergeOrigin
}

// GetMergeOriginOk returns a tuple with the MergeOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrectGhostMailboxRequest) GetMergeOriginOk() (*string, bool) {
	if o == nil || IsNil(o.MergeOrigin) {
		return nil, false
	}
	return o.MergeOrigin, true
}

// HasMergeOrigin returns a boolean if a field has been set.
func (o *CorrectGhostMailboxRequest) HasMergeOrigin() bool {
	if o != nil && !IsNil(o.MergeOrigin) {
		return true
	}

	return false
}

// SetMergeOrigin gets a reference to the given string and assigns it to the MergeOrigin field.
func (o *CorrectGhostMailboxRequest) SetMergeOrigin(v string) {
	o.MergeOrigin = &v
}

func (o CorrectGhostMailboxRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorrectGhostMailboxRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MergeDestination) {
		toSerialize["mergeDestination"] = o.MergeDestination
	}
	if !IsNil(o.MergeOrigin) {
		toSerialize["mergeOrigin"] = o.MergeOrigin
	}
	return toSerialize, nil
}

type NullableCorrectGhostMailboxRequest struct {
	value *CorrectGhostMailboxRequest
	isSet bool
}

func (v NullableCorrectGhostMailboxRequest) Get() *CorrectGhostMailboxRequest {
	return v.value
}

func (v *NullableCorrectGhostMailboxRequest) Set(val *CorrectGhostMailboxRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCorrectGhostMailboxRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCorrectGhostMailboxRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorrectGhostMailboxRequest(val *CorrectGhostMailboxRequest) *NullableCorrectGhostMailboxRequest {
	return &NullableCorrectGhostMailboxRequest{value: val, isSet: true}
}

func (v NullableCorrectGhostMailboxRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorrectGhostMailboxRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


