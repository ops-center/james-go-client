/*
Apache JAMES Web Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecomputeCurrentQuotasRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecomputeCurrentQuotasRequest{}

// RecomputeCurrentQuotasRequest struct for RecomputeCurrentQuotasRequest
type RecomputeCurrentQuotasRequest struct {
	UsersPerSecond *int32 `json:"usersPerSecond,omitempty"`
}

// NewRecomputeCurrentQuotasRequest instantiates a new RecomputeCurrentQuotasRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecomputeCurrentQuotasRequest() *RecomputeCurrentQuotasRequest {
	this := RecomputeCurrentQuotasRequest{}
	return &this
}

// NewRecomputeCurrentQuotasRequestWithDefaults instantiates a new RecomputeCurrentQuotasRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecomputeCurrentQuotasRequestWithDefaults() *RecomputeCurrentQuotasRequest {
	this := RecomputeCurrentQuotasRequest{}
	return &this
}

// GetUsersPerSecond returns the UsersPerSecond field value if set, zero value otherwise.
func (o *RecomputeCurrentQuotasRequest) GetUsersPerSecond() int32 {
	if o == nil || IsNil(o.UsersPerSecond) {
		var ret int32
		return ret
	}
	return *o.UsersPerSecond
}

// GetUsersPerSecondOk returns a tuple with the UsersPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecomputeCurrentQuotasRequest) GetUsersPerSecondOk() (*int32, bool) {
	if o == nil || IsNil(o.UsersPerSecond) {
		return nil, false
	}
	return o.UsersPerSecond, true
}

// HasUsersPerSecond returns a boolean if a field has been set.
func (o *RecomputeCurrentQuotasRequest) HasUsersPerSecond() bool {
	if o != nil && !IsNil(o.UsersPerSecond) {
		return true
	}

	return false
}

// SetUsersPerSecond gets a reference to the given int32 and assigns it to the UsersPerSecond field.
func (o *RecomputeCurrentQuotasRequest) SetUsersPerSecond(v int32) {
	o.UsersPerSecond = &v
}

func (o RecomputeCurrentQuotasRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecomputeCurrentQuotasRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UsersPerSecond) {
		toSerialize["usersPerSecond"] = o.UsersPerSecond
	}
	return toSerialize, nil
}

type NullableRecomputeCurrentQuotasRequest struct {
	value *RecomputeCurrentQuotasRequest
	isSet bool
}

func (v NullableRecomputeCurrentQuotasRequest) Get() *RecomputeCurrentQuotasRequest {
	return v.value
}

func (v *NullableRecomputeCurrentQuotasRequest) Set(val *RecomputeCurrentQuotasRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRecomputeCurrentQuotasRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRecomputeCurrentQuotasRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecomputeCurrentQuotasRequest(val *RecomputeCurrentQuotasRequest) *NullableRecomputeCurrentQuotasRequest {
	return &NullableRecomputeCurrentQuotasRequest{value: val, isSet: true}
}

func (v NullableRecomputeCurrentQuotasRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecomputeCurrentQuotasRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


